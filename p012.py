# Project Euler - Problem 12
# -----------------------------------------------------------------------------
# The sequence of triangle numbers if generated by adding the natural numbers.
# So the 7th triangle number would be 1+2+3+4+5+6+7 = 28. The first ten terms
# would be :
# 	 1: 1
# 	 3: 1, 3
# 	 6: 1, 2, 3, 6
# 	10: 1, 2, 5, 10
# 	15: 1, 3, 5, 15
# 	21: 1, 3, 7, 21
# 	28: 1, 2, 4, 7, 14, 28
# 
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over 500 divisors?
# ----------------------------------------------------------------------------- 

import time
import math
start = time.time()

nth = 1
num = 1
finished = False
while not finished:
	nth += 1
	num += nth
	factor = 2
	count = 2
	while count <= math.floor(math.sqrt(num)):
		if num % count == 0:
			factor += 2
		count += 1
	if factor >= 500:
		finished = True

end = time.time()
print(num)
print('Processing Time: {} seconds'.format(end-start))
