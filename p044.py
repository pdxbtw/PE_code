#!/home/fure_j/Software/pypy3-2.4-linux_x86_64-portable/bin/pypy
# !/home/wilson_b/anaconda3/bin/python

# Project Euler - Problem 44
# -----------------------------------------------------------------------------
# Pentagonal numbers are generated by the formula, Pn = n(3n-1)/2. The first 
# ten pentagonal numbers are:
#       1,5,12,22,35,51,70,92,117,145,...
# It can be seen that P4 + P7 = 92 = P8. However, their difference is not 
# pentagonal. 
# Find a pair of pentagonal numbers, Pj and Pk, for which their sum and 
# difference are pentagonal and D = |Pk - Pj| is minimised; what is the value
# of D?

from decimal import *
import time
import pdb
#pdb.set_trace()
getcontext().prec = 3
start = time.clock()

result = 0
p_len = 10000
p = [int(n*(3*n-1)/2) for n in range(1,p_len +1)]
n = 0
min_diff = 1e12
for i in p:
        n += 1
        for j in p[n:]:
                sum = i+j
                if sum in p:
                        diff = j-i
                        if diff in p:
                                if diff < min_diff:
                                        min_diff = diff
                                print(diff)

stop = time.clock()
print(diff)
print("Processing time:", Decimal(stop) - Decimal(start), "seconds")
